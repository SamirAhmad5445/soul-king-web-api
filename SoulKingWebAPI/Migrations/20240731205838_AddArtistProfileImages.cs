using Microsoft.EntityFrameworkCore.Migrations;

#nullable disable

namespace SoulKingWebAPI.Migrations
{
    /// <inheritdoc />
    public partial class AddArtistProfileImages : Migration
    {
        /// <inheritdoc />
        protected override void Up(MigrationBuilder migrationBuilder)
        {
            migrationBuilder.AddColumn<string>(
                name: "ProfileImage",
                table: "Artists",
                type: "nvarchar(max)",
                nullable: false,
                defaultValue: "");

            migrationBuilder.UpdateData(
                table: "Artists",
                keyColumn: "Id",
                keyValue: 1,
                columns: new[] { "PasswordHash", "PasswordSalt", "ProfileImage" },
                values: new object[] { new byte[] { 238, 122, 64, 156, 162, 171, 242, 242, 15, 171, 111, 48, 118, 206, 229, 79, 242, 118, 211, 211, 132, 159, 133, 157, 195, 197, 67, 255, 114, 88, 68, 175, 164, 229, 129, 65, 57, 94, 135, 173, 142, 71, 31, 226, 34, 66, 21, 30, 151, 250, 24, 220, 78, 26, 205, 4, 210, 199, 146, 69, 153, 39, 249, 166 }, new byte[] { 84, 177, 6, 252, 7, 170, 13, 9, 58, 203, 197, 237, 65, 14, 221, 52, 155, 4, 89, 205, 19, 97, 183, 86, 206, 168, 186, 15, 231, 196, 161, 95, 165, 220, 47, 14, 48, 137, 198, 253, 167, 168, 23, 217, 8, 150, 172, 7, 232, 222, 250, 30, 140, 47, 5, 217, 74, 132, 139, 174, 240, 209, 222, 6, 206, 112, 227, 253, 56, 249, 21, 193, 21, 9, 139, 33, 228, 215, 45, 144, 227, 130, 255, 125, 152, 8, 113, 64, 62, 238, 176, 14, 238, 83, 219, 54, 143, 22, 181, 96, 72, 225, 190, 239, 231, 184, 117, 108, 78, 253, 66, 74, 143, 129, 232, 40, 42, 35, 211, 97, 130, 30, 39, 44, 93, 107, 117, 72 }, "" });

            migrationBuilder.UpdateData(
                table: "Artists",
                keyColumn: "Id",
                keyValue: 2,
                columns: new[] { "PasswordHash", "PasswordSalt", "ProfileImage" },
                values: new object[] { new byte[] { 13, 143, 211, 15, 193, 35, 93, 2, 144, 235, 14, 27, 131, 204, 119, 196, 43, 59, 62, 139, 109, 55, 48, 27, 253, 47, 217, 135, 44, 170, 160, 210, 250, 246, 208, 166, 221, 55, 18, 102, 251, 52, 146, 250, 53, 24, 218, 134, 83, 34, 80, 18, 237, 215, 214, 64, 57, 228, 233, 117, 90, 79, 75, 179 }, new byte[] { 197, 185, 117, 230, 225, 195, 232, 247, 199, 226, 215, 146, 233, 56, 152, 208, 195, 243, 141, 66, 180, 236, 60, 237, 124, 25, 207, 203, 172, 185, 41, 187, 255, 239, 71, 40, 213, 58, 230, 101, 29, 82, 18, 40, 174, 29, 200, 185, 251, 107, 212, 158, 154, 153, 212, 242, 103, 52, 19, 33, 150, 197, 24, 68, 48, 56, 230, 50, 196, 205, 216, 254, 160, 110, 148, 252, 57, 16, 13, 172, 170, 153, 97, 220, 53, 148, 96, 98, 105, 237, 116, 14, 164, 184, 91, 237, 161, 78, 3, 35, 31, 53, 48, 202, 175, 27, 236, 59, 48, 83, 2, 74, 68, 18, 248, 67, 56, 170, 104, 188, 75, 181, 205, 45, 9, 74, 152, 57 }, "" });
        }

        /// <inheritdoc />
        protected override void Down(MigrationBuilder migrationBuilder)
        {
            migrationBuilder.DropColumn(
                name: "ProfileImage",
                table: "Artists");

            migrationBuilder.UpdateData(
                table: "Artists",
                keyColumn: "Id",
                keyValue: 1,
                columns: new[] { "PasswordHash", "PasswordSalt" },
                values: new object[] { new byte[] { 7, 178, 28, 193, 94, 103, 209, 47, 16, 217, 227, 254, 58, 29, 56, 157, 110, 247, 153, 38, 157, 74, 46, 27, 187, 175, 141, 108, 182, 155, 208, 116, 192, 132, 72, 191, 153, 74, 43, 113, 80, 193, 134, 77, 98, 185, 117, 25, 110, 138, 69, 168, 233, 42, 124, 153, 200, 148, 59, 251, 75, 10, 215, 70 }, new byte[] { 46, 155, 6, 231, 13, 191, 85, 98, 113, 26, 218, 158, 22, 205, 121, 33, 237, 208, 212, 192, 46, 25, 195, 48, 157, 177, 220, 192, 118, 201, 239, 177, 40, 188, 151, 191, 75, 216, 182, 205, 202, 224, 137, 244, 242, 248, 224, 6, 97, 1, 55, 91, 158, 23, 247, 95, 107, 123, 30, 213, 83, 3, 112, 105, 31, 91, 30, 114, 14, 191, 49, 160, 243, 239, 224, 60, 195, 193, 43, 231, 122, 160, 160, 44, 221, 20, 198, 168, 45, 235, 172, 162, 211, 191, 193, 103, 127, 31, 232, 137, 115, 88, 124, 8, 31, 228, 195, 29, 23, 97, 60, 37, 56, 190, 91, 78, 157, 200, 248, 43, 177, 146, 227, 39, 17, 148, 178, 219 } });

            migrationBuilder.UpdateData(
                table: "Artists",
                keyColumn: "Id",
                keyValue: 2,
                columns: new[] { "PasswordHash", "PasswordSalt" },
                values: new object[] { new byte[] { 21, 217, 94, 226, 192, 149, 140, 209, 33, 63, 169, 12, 188, 130, 98, 222, 147, 17, 35, 222, 122, 199, 67, 6, 245, 239, 74, 149, 45, 99, 41, 110, 167, 112, 173, 163, 98, 177, 9, 203, 168, 37, 182, 75, 208, 245, 255, 12, 75, 114, 86, 97, 93, 115, 248, 216, 81, 208, 42, 54, 115, 41, 223, 160 }, new byte[] { 49, 46, 70, 8, 131, 91, 99, 230, 161, 250, 123, 137, 43, 3, 195, 115, 149, 167, 75, 72, 190, 119, 32, 205, 185, 61, 147, 188, 148, 73, 66, 97, 14, 151, 79, 44, 133, 23, 172, 232, 8, 95, 212, 155, 86, 203, 2, 211, 195, 186, 224, 26, 245, 91, 106, 44, 185, 143, 145, 168, 23, 108, 176, 67, 113, 20, 111, 104, 176, 188, 45, 54, 150, 228, 180, 175, 91, 154, 85, 12, 119, 44, 182, 9, 142, 58, 57, 57, 184, 177, 217, 248, 226, 184, 146, 124, 116, 99, 9, 217, 10, 93, 166, 30, 130, 191, 93, 147, 180, 43, 49, 213, 113, 101, 147, 144, 180, 169, 229, 242, 202, 17, 235, 94, 92, 241, 137, 80 } });
        }
    }
}
